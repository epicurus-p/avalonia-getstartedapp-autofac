<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:getstartedapp.ViewModels"
        xmlns:domain="using:getstartedapp.Domain"
        xmlns:svc="using:getstartedapp.Services"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="getstartedapp.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="getstartedapp">
    
    <Window.KeyBindings>
        <KeyBinding Gesture="Enter" Command="{Binding AddCommand}" />
        <KeyBinding Gesture="Delete" Command="{Binding DeleteSelectedCommand}" />
        <KeyBinding Gesture="Ctrl+F" Command="{Binding LoadCommand}">
            <!-- we’ll also manually focus search in code-behind if you like -->
        </KeyBinding>
    </Window.KeyBindings>

    
    <Design.DataContext>
        This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -
        <vm:DesignMainWindowViewModel/>
    </Design.DataContext>
    
    <DockPanel Margin="12" LastChildFill="True">
        
        <!-- TOP TOOLBAR -->
        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Spacing="8">
          <!-- Quick add --> 
          <TextBox x:Name="QuickAdd" Width="260" Watermark="Add a task…" Text="{Binding NewTitle}"/>
          <ComboBox Width="110" ItemsSource="{Binding TodoPriorities}"
                    SelectedItem="{Binding NewPriority}" />
          <DatePicker Width="160" SelectedDate="{Binding NewDue}" />
          <Button Content="Add" Command="{Binding AddCommand}" />
          <Separator Margin="12,0"/>
          <!-- Filter + Search -->
          <ComboBox Width="130" ItemsSource="{Binding Filters}" SelectedItem="{Binding Filter}">
          </ComboBox>
          <TextBox x:Name="SearchBox" Width="220" Watermark="Search…" Text="{Binding Search}"/>
          <Button Content="Refresh" Command="{Binding LoadCommand}"/>
        </StackPanel>   
        
        <!-- GRID -->
        <DataGrid ItemsSource="{Binding Items}" SelectedItem="{Binding Selected}" AutoGenerateColumns="False" IsReadOnly="False" GridLinesVisibility="None" HeadersVisibility="Column" Margin="0,8,0,8">
          <DataGrid.Columns>
            <DataGridCheckBoxColumn Header="Done" Binding="{Binding IsDone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <DataGridTextColumn Header="Title" Binding="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="*" />
            <DataGridTemplateColumn Header="Priority" Width="120">
              <DataGridTemplateColumn.CellTemplate>
                <DataTemplate x:DataType="vm:TodoItemViewModel">
                  <ComboBox ItemsSource="{Binding TodoPriorities}" SelectedItem="{Binding Priority, Mode=TwoWay}"/>
                </DataTemplate>
              </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <DataGridTemplateColumn Header="Due" Width="160">
              <DataGridTemplateColumn.CellTemplate>
                <DataTemplate x:DataType="vm:TodoItemViewModel">
                  <DatePicker SelectedDate="{Binding DueDate, Mode=TwoWay}"/>
                </DataTemplate>
              </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <DataGridTextColumn Header="Notes" Binding="{Binding Notes, Mode=TwoWay}" Width="2*" />
          </DataGrid.Columns>
        </DataGrid>

        <!-- STATUS -->
        <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" Spacing="8">
          <Border Padding="6,2" Background="#EEE" CornerRadius="12">
            <TextBlock>
              <Run Text="{Binding CompletedCount}"/><Run Text=" / "/><Run Text="{Binding TotalCount}"/><Run Text=" done"/>
            </TextBlock>
          </Border>
          <Button Content="Delete" Command="{Binding DeleteSelectedCommand}" IsEnabled="{Binding CanDelete}" />
          <TextBlock Text="• Double‑click cells to edit • Press Enter to add • Delete to remove" Foreground="#666" Margin="12,0,0,0"/>
        </StackPanel>
        
    </DockPanel>
</Window>
